server:
  port: 8080

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
#    org.springframework.boot.autoconfigure: DEBUG

spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        registration:
          uaa:
            client-id: oauth2login-demo
            client-secret: secret
            client-authentication-method: basic
            authorization-grant-type: authorization_code
            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid, profile, email
            client-name: UAA
        provider:
          uaa:
            authorization-uri: http://localhost:8090/uaa/oauth/authorize
            # This is the end point where Oauth2 client redirects the user or agent to allow him to login with the
            # credentials, you get the consent screen
            token-uri: http://localhost:8090/uaa/oauth/token
            # this is the call back url where authorization code redirected to the user agent to  server
            user-info-uri: http://localhost:8090/uaa/userinfo
            user-name-attribute: sub
            jwk-set-uri: http://localhost:8090/uaa/token_keys